{"version":3,"sources":["logo.svg","todoComp.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["todoComp","todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","localStorageKey","generateRandomId","arr","Id","Math","floor","random","includes","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","onClick","e","current","value","pretoDos","console","log","newList","filter","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAe,I,YCEA,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAIpC,OACI,8BACI,kCACC,uBAAOC,KAAK,WAAWC,QAAWH,EAAKI,SAAUC,SANlC,WACpBJ,EAAWD,EAAKM,OAMVN,EAAKO,UCRJ,SAASC,EAAT,GAAyC,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WACrC,OACIQ,EAAMC,KAAI,SAAAV,GACN,OAAO,cAAC,EAAD,CAAoBC,WAAcA,EAAeD,KAAMA,GAA5CA,EAAKM,OCDnC,IAAMK,EAAkB,gBAClBC,EAAmB,WAGvB,IAFA,IAAIC,EAAM,GACNC,EAAKC,KAAKC,MAAoB,IAAdD,KAAKE,UAClBJ,EAAIK,SAASJ,IACdA,EAAKC,KAAKC,MAAoB,IAAdD,KAAKE,UAE3B,OAAOH,GA6CMK,MA3Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACMC,EAAcC,mBA6BpB,OA3BAC,qBAAU,WACV,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQlB,IAC9Cc,GAAaJ,EAASI,KAC1B,IAEFD,qBAAU,WACRI,aAAaE,QAAQnB,EAAiBe,KAAKK,UAAUtB,MACrD,CAACA,IAqBD,qCACA,cAACD,EAAD,CAAUC,MAASA,EAAOR,WArBT,SAAAK,GACjB,IAAM0B,EAAQ,YAAOvB,GACfT,EAAOgC,EAASC,MAAK,SAAAjC,GAAI,OAAIA,EAAKM,KAAOA,KAC/CN,EAAKI,UAAYJ,EAAKI,SACtBiB,EAASW,MAkBT,uBAAOE,IAAKZ,EAAapB,KAAK,SAC9B,wBAAQiC,QAbV,SAAuBC,GACrB,IAAM7B,EAAOe,EAAYe,QAAQC,MACjC,GAAY,KAAT/B,EAAa,OAAO,EACvBc,GAAS,SAAAkB,GAEP,OADAC,QAAQC,IAAIF,GACN,GAAN,mBAAWA,GAAX,CAAqB,CAACjC,GAAIM,IAAqBL,KAAKA,EAAMH,UAAU,QAEtEkB,EAAYe,QAAQC,MAAQ,MAM5B,uBACA,wBAAQH,QAlBV,WACE,IAAMO,EAAWjC,EAAMkC,QAAO,SAAA3C,GAAI,OAAKA,EAAKI,YAC5CiB,EAASqB,IAgBT,4BACA,gCAAMjC,EAAMkC,QAAO,SAAA3C,GAAI,OAAKA,EAAKI,YAAUwC,OAA3C,qBCtCWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.84c90c3d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nexport default function todoComp({todo, toggleTodo}) {\r\n    const handleTodoClick = () =>{\r\n        toggleTodo(todo.id)\r\n    }\r\n    return (\r\n        <div>\r\n            <label>\r\n             <input type=\"checkbox\" checked = {todo.complete} onChange={handleTodoClick} />\r\n             {todo.name}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from './todoComp'\r\nexport default function TodoList({todos, toggleTodo }) {\r\n    return (\r\n        todos.map(todo =>{\r\n            return <Todo key={todo.id} toggleTodo = {toggleTodo}    todo={todo} />\r\n        })\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport react, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nconst localStorageKey = 'todoApp.todos'\nconst generateRandomId = () =>{\n  var arr = [];\n  var Id = Math.floor(Math.random()*10000);\n  while (arr.includes(Id)){\n    var Id = Math.floor(Math.random()*10000);\n  }\n  return Id;\n}\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n \n  useEffect(()=>{\n  const storedTodos = JSON.parse(localStorage.getItem(localStorageKey))\n    if (storedTodos) setTodos(storedTodos)\n  },[])\n\n  useEffect(()=>{\n    localStorage.setItem(localStorageKey, JSON.stringify(todos))\n  },[todos])\n  const toggleTodo = id =>{\n    const newTodos = [...todos] \n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n  function handleClear() {\n    const newList  = todos.filter(todo => !todo.complete)\n    setTodos(newList)\n  }\n  function handleAddToDo(e){\n    const name = todoNameRef.current.value;\n    if(name === '') return false;\n    setTodos(pretoDos =>{\n      console.log(pretoDos)\n      return [...pretoDos, {id: generateRandomId() , name:name, complete: false}]\n    })\n    todoNameRef.current.value = null;\n  }\n  return (\n    <>\n    <TodoList todos = {todos} toggleTodo={toggleTodo} />\n    <input ref={todoNameRef} type=\"text\"/>\n    <button onClick={handleAddToDo}>Add to do</button>\n    <button onClick={handleClear}>Clear complete</button>\n    <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n  </>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}